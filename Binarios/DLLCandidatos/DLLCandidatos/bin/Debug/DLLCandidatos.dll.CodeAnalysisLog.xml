<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 11.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="11.0">
 <Targets>
  <Target Name="C:\Users\WIN 7\Desktop\Practica2 Desarrollo\Daniel Esteban Ortiz Rios\DLLCandidatos\DLLCandidatos\bin\Debug\DLLCandidatos.dll">
   <Modules>
    <Module Name="dllcandidatos.dll">
     <Namespaces>
      <Namespace Name="DLLCandidatos">
       <Types>
        <Type Name="Class1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BuscarElectores(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="No usar Dispose varias veces en objetos" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-04-21 12:07:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\WIN 7\Desktop\Practica2 Desarrollo\Daniel Esteban Ortiz Rios\DLLCandidatos\DLLCandidatos" File="Class1.cs" Line="77">El objeto 'FileStr' admite Dispose más de una vez en el método 'Class1.BuscarElectores(string, string)'. Para evitar generar una excepción System.ObjectDisposedException, no debe llamar a Dispose más de una vez en un objeto.: Lines: 77</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CargarElectores()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="No usar Dispose varias veces en objetos" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2016-04-21 12:07:47Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\WIN 7\Desktop\Practica2 Desarrollo\Daniel Esteban Ortiz Rios\DLLCandidatos\DLLCandidatos" File="Class1.cs" Line="40">El objeto 'FileStr' admite Dispose más de una vez en el método 'Class1.CargarElectores()'. Para evitar generar una excepción System.ObjectDisposedException, no debe llamar a Dispose más de una vez en un objeto.: Lines: 40</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#consulta(System.String,System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-04-21 12:07:47Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\WIN 7\Desktop\Practica2 Desarrollo\Daniel Esteban Ortiz Rios\DLLCandidatos\DLLCandidatos" File="Class1.cs" Line="103">La cadena de consulta pasada a 'SqlCommand.SqlCommand(string, SqlConnection)' en 'Class1.consulta(string, SqlConnection)' podría contener las siguientes variables: 'conSQL'. Si alguna de estas variables puede proceder de datos proporcionados por el usuario, considere el uso de un procedimiento almacenado o una consulta SQL parametrizada en lugar de compilar la consulta con concatenaciones de cadenas.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#operarar(System.String,System.Data.SqlClient.SqlConnection)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2016-04-21 12:07:47Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\WIN 7\Desktop\Practica2 Desarrollo\Daniel Esteban Ortiz Rios\DLLCandidatos\DLLCandidatos" File="Class1.cs" Line="120">La cadena de consulta pasada a 'SqlCommand.SqlCommand(string, SqlConnection)' en 'Class1.operarar(string, SqlConnection)' podría contener las siguientes variables: 'conSQL'. Si alguna de estas variables puede proceder de datos proporcionados por el usuario, considere el uso de un procedimiento almacenado o una consulta SQL parametrizada en lugar de compilar la consulta con concatenaciones de cadenas.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="No usar Dispose varias veces en objetos" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>No usar Dispose varias veces en objetos</Name>
   <Description>Un método Dispose correctamente implementado se puede llamar varias veces sin producir ninguna excepción. Sin embargo, esto no está garantizado y, para evitar generar una excepción System.ObjectDisposedException, no debe llamar al método Dispose más de una vez en un objeto.</Description>
   <Resolution Name="Default">El objeto {0} admite Dispose más de una vez en el método {1}. Para evitar generar una excepción System.ObjectDisposedException, no debe llamar a Dispose más de una vez en un objeto.: Lines: 77</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
  <Rule TypeName="Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Revisar consultas SQL para comprobar si tienen vulnerabilidades de seguridad</Name>
   <Description>Una cadena de comando SQL compilada a partir de datos proporcionados por el usuario es vulnerable a ataques pon inyección de código SQL. Microsoft SQL Server y otros servidores de bases de datos admiten procedimientos almacenados y consultas SQL parametrizadas, que reducen el riesgo de ataques por inyección.</Description>
   <Resolution Name="WithNonLiterals">La cadena de consulta pasada a {0} en {1} podría contener las siguientes variables: {2}. Si alguna de estas variables puede proceder de datos proporcionados por el usuario, considere el uso de un procedimiento almacenado o una consulta SQL parametrizada en lugar de compilar la consulta con concatenaciones de cadenas.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="11.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Categoría</String>
  <String Key="Certainty">Certeza</String>
  <String Key="CollapseAll">Contraer todo</String>
  <String Key="CheckId">Comprobar id.</String>
  <String Key="Error">Error</String>
  <String Key="Errors">errores</String>
  <String Key="ExpandAll">Expandir todo</String>
  <String Key="Help">Ayuda</String>
  <String Key="Line">Línea</String>
  <String Key="Messages">mensajes</String>
  <String Key="LocationNotStoredInPdb">[Ubicación no almacenada en Pdb]</String>
  <String Key="Project">Proyecto</String>
  <String Key="Resolution">Resolución</String>
  <String Key="Rule">Regla</String>
  <String Key="RuleFile">Archivo de regla</String>
  <String Key="RuleDescription">Descripción de la regla</String>
  <String Key="Source">Origen</String>
  <String Key="Status">Estado</String>
  <String Key="Target">Círculos concéntricos</String>
  <String Key="Warning">Advertencia</String>
  <String Key="Warnings">advertencias</String>
  <String Key="ReportTitle">Informe de análisis del código</String>
 </Localized>
</FxCopReport>
